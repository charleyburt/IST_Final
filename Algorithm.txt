start: 4
end: 8

spot_curr = 8
spot_end = 8
vector<DLL> paths = [4,3,6,10,12,8],
                    [],
DLL<int> pathList = [4,3,6,10,12,8]
DLL<int> deadEnds = [7,11,14]
vector<int> options = [8]

FindShortestPath(int spot_curr, int spot_end, DLL<int> pathList, DLL<int> deadEnds)
    if (spot_curr == spot_end)
        paths->push_back(pathList)

    else if (spot_curr != spot_end)

        // create new vector: "options"
        vector options

        // find movement options
        for (each column i in table)
            if (table[spot_curr][i] > 0 && !pathList.contains(i) && !deadEnds->contains(i))
                options.push_back(i)

        // if there's only one place to go
        if (options.size() == 1)
            pathList.addBack(spot_curr)                                 // add current spot to pathList
            spot_curr = options.back()                                  // set new current spot
            FindShortestPath(spot_curr, spot_end, pathList, deadEnds)   // find the shortest path starting at the new current spot

        // if there's multiple options
        else if (options.size() > 1)
            pathList.addBack(spot_curr)                     // add current spot to pathList

            // choose next spot based on min cost of possible spots and numerical order they appear
            int min = table[spot_curr][options->front()]
            for (int i : options)
                if (table[spot_curr][i] < min)
                    min = table[spot_curr][i]

            // choose the first option that has the minimum cost
            int idx = 0
            while (table[spot_curr][options->at(idx)] != min)
                idx++

            FindShortestPath(options->at(idx), spot_end, pathList, deadEnds)

        // else there are zero options
        else if (options.size() == 0)
            deadEnds.addLast(spot_curr)         // current spot has no options, so add it to deadEnds
            spot_curr = pathList.removeLast()   // change current spot to the previous location
            FindShortestPath(spot_curr, spot_end, pathList, deadEnds)



    delete options
